{"version":3,"sources":["../../src/gmod/clustal-js/dist/util.js","colorSchemes.js","App.js","serviceWorker.js","index.jsx","../../src/gmod/clustal-js/dist/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","parseVersion","parseHeader","info","knownHeaders","find","l","startsWith","console","warn","concat","join","version","getFirstNonEmptyLine","getSeqBounds","parseBlock","parseBlocks","arr","block","res","undefined","i","seqs","length","consensus","_slicedToArray2","line","match","next","done","trim","fields","split","temp","slice","s","indexOf","consensusLine","push","_getSeqBounds","_getSeqBounds2","default","start","end","ids","map","remainder","repeat","clustal","G","P","S","T","H","K","R","F","W","Y","I","L","M","V","lesk","A","C","N","Q","D","E","maeditor","cinema","B","Z","X","Cell","props","rowIndex","columnIndex","style","data","colorScheme","rowData","letter","keys","backgroundColor","toUpperCase","Window","zoom","nodes","elt","columnCount","columnWidth","height","rowCount","rowHeight","width","itemData","MSARows","ref","useRef","App","useState","setData","setZoom","useEffect","a","fetch","ok","text","parse","result","fromEntries","alns","row","id","seq","colorSchemes","className","onClick","state","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","parseIter","contents","Symbol","iterator","_util","Error","header","n","index"],"mappings":"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","file":"static/js/main.0aff3f59.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseVersion = parseVersion;\nexports.parseHeader = parseHeader;\nexports.getFirstNonEmptyLine = getFirstNonEmptyLine;\nexports.getSeqBounds = getSeqBounds;\nexports.parseBlock = parseBlock;\nexports.parseBlocks = parseBlocks;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nfunction parseVersion(line) {\n  var res = line.match(/\\(?(\\d+(\\.\\d+)+)\\)?/);\n  return res && res.length > 1 ? res[1] : \"\";\n}\n\nfunction parseHeader(info) {\n  var knownHeaders = [\"CLUSTAL\", \"PROBCONS\", \"MUSCLE\", \"MSAPROBS\", \"Kalign\"];\n\n  if (!knownHeaders.find(function (l) {\n    return info.startsWith(l);\n  })) {\n    console.warn(\"\".concat(info, \" is not a known CLUSTAL header: \").concat(knownHeaders.join(\",\"), \", proceeding but could indicate an issue\"));\n  }\n\n  var version = parseVersion(info);\n  return {\n    info: info,\n    version: version\n  };\n}\n\nfunction getFirstNonEmptyLine(arr) {\n  // There should be two blank lines after the header line\n  var line = arr.next();\n\n  while (!line.done && line.value.trim() === \"\") {\n    line = arr.next();\n  }\n\n  return line.value;\n}\n\nfunction getSeqBounds(line) {\n  var fields = line.split(/\\s+/);\n  var temp = line.slice(fields[0].length);\n  var s = fields[0].length + temp.indexOf(fields[1]);\n  var e = s + fields[1].length;\n  return [s, e];\n} // Use the first block to get the sequence identifiers\n\n\nfunction parseBlock(arr) {\n  var line = getFirstNonEmptyLine(arr);\n  var block = [];\n  var consensusLine = \"\";\n  if (!line) return undefined;\n\n  while (line) {\n    if (line[0] !== \" \") block.push(line);else consensusLine = line;\n    line = arr.next().value;\n  }\n\n  var _getSeqBounds = getSeqBounds(block[0]),\n      _getSeqBounds2 = (0, _slicedToArray2.default)(_getSeqBounds, 2),\n      start = _getSeqBounds2[0],\n      end = _getSeqBounds2[1];\n\n  var fields = block.map(function (s) {\n    return s.split(/\\s+/);\n  });\n  var ids = fields.map(function (s) {\n    return s[0];\n  });\n  var seqs = block.map(function (s) {\n    return s.slice(start, end);\n  });\n  var consensus = consensusLine.slice(start, end); // handle if the consensus trailing whitespace got trimmed\n\n  var remainder = seqs[0].length - consensus.length;\n\n  if (remainder) {\n    consensus += \" \".repeat(remainder);\n  }\n\n  return {\n    ids: ids,\n    seqs: seqs,\n    consensus: consensus\n  };\n}\n\nfunction parseBlocks(arr) {\n  var block;\n  var res = parseBlock(arr);\n\n  if (res !== undefined) {\n    while (block = parseBlock(arr)) {\n      for (var i = 0; i < block.seqs.length; i++) {\n        res.seqs[i] += block.seqs[i];\n      }\n\n      res.consensus += block.consensus;\n    }\n  }\n\n  return res;\n}","export default {\n  clustal: {\n    G: 'orange',\n    P: 'orange',\n    S: 'orange',\n    T: 'orange',\n    H: 'red',\n    K: 'red',\n    R: 'red',\n    F: 'blue',\n    W: 'blue',\n    Y: 'blue',\n    I: 'green',\n    L: 'green',\n    M: 'green',\n    V: 'green',\n  },\n  lesk: {\n    G: 'orange',\n    A: 'orange',\n    S: 'orange',\n    T: 'orange',\n    C: 'green',\n    V: 'green',\n    I: 'green',\n    L: 'green',\n    P: 'green',\n    F: 'green',\n    Y: 'green',\n    M: 'green',\n    W: 'green',\n    N: 'magenta',\n    Q: 'magenta',\n    H: 'magenta',\n    D: 'red',\n    E: 'red',\n    K: 'blue',\n    R: 'blue',\n  },\n  maeditor: {\n    A: 'lightgreen',\n    G: 'lightgreen',\n    C: 'green',\n    D: 'darkgreen',\n    E: 'darkgreen',\n    N: 'darkgreen',\n    Q: 'darkgreen',\n    I: 'blue',\n    L: 'blue',\n    M: 'blue',\n    V: 'blue',\n    F: 'lilac',\n    W: 'lilac',\n    Y: 'lilac',\n    H: 'darkblue',\n    K: 'orange',\n    R: 'orange',\n    P: 'pink',\n    S: 'red',\n    T: 'red',\n  },\n  cinema: {\n    H: 'blue',\n    K: 'blue',\n    R: 'blue',\n    D: 'red',\n    E: 'red',\n    S: 'green',\n    T: 'green',\n    N: 'green',\n    Q: 'green',\n    A: 'white',\n    V: 'white',\n    L: 'white',\n    I: 'white',\n    M: 'white',\n    F: 'magenta',\n    W: 'magenta',\n    Y: 'magenta',\n    P: 'brown',\n    G: 'brown',\n    C: 'yellow',\n    B: 'gray',\n    Z: 'gray',\n    X: 'gray',\n    '-': 'gray',\n    '.': 'gray',\n  },\n}\n","/* eslint-disable react/forbid-prop-types */\nimport React, { useState, useRef, useCallback, useEffect } from 'react'\nimport './App.css'\nimport PropTypes from 'prop-types'\nimport { FixedSizeGrid as Grid } from 'react-window'\nimport Autosizer from 'react-virtualized-auto-sizer'\nimport { parse } from 'clustal-js'\nimport colorSchemes from './colorSchemes'\n\nconst defaultColorScheme = 'maeditor'\n\nconst Cell = props => {\n  const { rowIndex, columnIndex, style, data } = props\n  const { colorScheme, rowData } = data\n  const nodes = Object.keys(rowData)\n  const letter = rowData[nodes[rowIndex]][columnIndex]\n  return (\n    <div\n      style={{\n        ...style,\n        backgroundColor: colorScheme[letter.toUpperCase()] || 'black',\n      }}\n    />\n  )\n}\n\nWindow.propTypes = {\n  rowData: PropTypes.any.isRequired,\n  zoom: PropTypes.number,\n}\nfunction Window(props) {\n  const { rowData, zoom } = props\n  const nodes = Object.keys(rowData)\n  const elt = nodes[0]\n\n  return (\n    <Grid\n      columnCount={rowData[elt].length}\n      columnWidth={zoom}\n      height={400}\n      rowCount={nodes.length}\n      rowHeight={20}\n      width={1000}\n      itemData={{ ...props }}\n    >\n      {Cell}\n    </Grid>\n  )\n}\n\nMSARows.propTypes = {\n  style: PropTypes.any,\n  colorScheme: PropTypes.any,\n  zoom: PropTypes.number,\n  rowData: PropTypes.any.isRequired,\n}\n\nfunction MSARows({ style = {}, zoom, rowData, colorScheme }) {\n  const ref = useRef()\n\n  return (\n    <div ref={ref} style={style}>\n      <Window zoom={zoom} rowData={rowData} colorScheme={colorScheme} />\n    </div>\n  )\n}\n\nfunction App() {\n  const [data, setData] = useState()\n  const [zoom, setZoom] = useState(10)\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('./tree-align-view-react/data.aln')\n      if (res.ok) {\n        const temp = await res.text()\n        const result = await parse(temp)\n        setData(Object.fromEntries(result.alns.map(row => [row.id, row.seq])))\n      }\n    })()\n  }, [])\n  const colorScheme = colorSchemes[defaultColorScheme]\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => setZoom(state => state / 2)}>Zoom out</button>\n      <button onClick={() => setZoom(state => state * 2)}>Zoom in</button>\n      {data ? (\n        <MSARows zoom={zoom} colorScheme={colorScheme} rowData={data} />\n      ) : null}\n    </div>\n  )\n}\n\nexport default App\n","/* eslint-disable no-console,no-param-reassign */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseIter = parseIter;\nexports.parse = parse;\n\nvar _util = require(\"./util\");\n\nfunction parseIter(arr) {\n  var line = (0, _util.getFirstNonEmptyLine)(arr);\n  if (!line) throw new Error(\"Empty file received\");\n  var header = (0, _util.parseHeader)(line);\n  var res = (0, _util.parseBlocks)(arr);\n  if (res === undefined) throw new Error(\"No blocks parsed\");\n  var alns = res.seqs.map(function (n, index) {\n    return {\n      id: res.ids[index],\n      seq: n\n    };\n  });\n  var consensus = res.consensus;\n\n  if (consensus.length != alns[0].seq.length) {\n    throw new Error(\"Consensus length != sequence length. Con \".concat(consensus.length, \" seq \").concat(alns[0].seq.length));\n  }\n\n  return {\n    consensus: consensus,\n    alns: alns,\n    header: header\n  };\n}\n\nfunction parse(contents) {\n  var iter = contents.split(\"\\n\")[Symbol.iterator]();\n  return parseIter(iter);\n}"],"sourceRoot":""}